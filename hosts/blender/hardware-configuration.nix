{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [ 
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  # This is a placeholder hardware configuration for the "blender" host
  # You should replace this with the actual hardware configuration generated by 'nixos-generate-config'
  
  # Boot configuration
  boot.loader.systemd-boot.enable = true;
  boot.loader.efi.canTouchEfiVariables = true;
  
  # File systems example (replace with your actual partitioning scheme)
  fileSystems."/" = {
    device = "/dev/disk/by-label/nixos";
    fsType = "ext4";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-label/boot";
    fsType = "vfat";
  };

  # Swap configuration
  swapDevices = [ { device = "/dev/disk/by-label/swap"; } ];

  # CPU settings - uncomment and adjust for your hardware
  # powerManagement.cpuFreqGovernor = "powersave";
  # hardware.cpu.intel.updateMicrocode = true;
  # hardware.cpu.amd.updateMicrocode = true;

  # Graphics settings - uncomment and adjust for your hardware
  # hardware.opengl = {
  #   enable = true;
  #   driSupport = true;
  # };

  # For NVIDIA graphics
  # hardware.nvidia = {
  #   modesetting.enable = true;
  #   powerManagement.enable = true;
  #   package = config.boot.kernelPackages.nvidiaPackages.stable;
  # };

  # For hybrid Intel/NVIDIA systems
  # hardware.nvidia.prime = {
  #   offload.enable = true;
  #   intelBusId = "PCI:0:2:0";
  #   nvidiaBusId = "PCI:1:0:0";
  # };

  # Networking hardware
  networking.useDHCP = lib.mkDefault true;

  # Hardware specific modules
  # hardware.enableRedistributableFirmware = true;
}